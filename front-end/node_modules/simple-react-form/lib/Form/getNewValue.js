"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const cloneDeep_1 = (0, tslib_1.__importDefault)(require("lodash/cloneDeep"));
const isPlainObject_1 = (0, tslib_1.__importDefault)(require("lodash/isPlainObject"));
const isNil_1 = (0, tslib_1.__importDefault)(require("lodash/isNil"));
const isFunction_1 = (0, tslib_1.__importDefault)(require("lodash/isFunction"));
const get_1 = (0, tslib_1.__importDefault)(require("lodash/get"));
const setValue = function (value, keyParts, fieldValue) {
    const key = keyParts.shift();
    if (keyParts.length === 0) {
        value[key] = fieldValue;
    }
    else {
        if (!isNaN(keyParts[0])) {
            if ((0, isNil_1.default)(value[key])) {
                value[key] = [];
            }
        }
        else {
            if ((0, isNil_1.default)(value[key])) {
                value[key] = {};
            }
            if (!(0, isPlainObject_1.default)(value[key])) {
                throw new Error(`Expected plain object for key ${key}`);
            }
        }
        setValue(value[key], keyParts, fieldValue);
    }
};
function default_1(val, fieldName, fieldValue) {
    const value = (0, cloneDeep_1.default)(val);
    const keyParts = fieldName.split('.');
    if ((0, isFunction_1.default)(fieldValue)) {
        const oldValue = (0, get_1.default)(value, fieldName);
        const newValue = fieldValue(oldValue);
        setValue(value, keyParts, newValue);
    }
    else {
        setValue(value, keyParts, fieldValue);
    }
    return value;
}
exports.default = default_1;
//# sourceMappingURL=getNewValue.js.map