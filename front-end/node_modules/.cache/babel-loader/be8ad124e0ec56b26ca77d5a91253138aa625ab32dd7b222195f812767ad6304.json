{"ast":null,"code":"var _jsxFileName = \"/home/ishwore/Documents/VehicleRent/front-end/src/screen/Book.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Book = () => {\n  _s();\n  const auth = localStorage.getItem('user');\n  const navigate = useNavigate();\n  const params = useParams();\n  const [fromDate, setFromDate] = useState('');\n  const [untilDate, setUntilDate] = useState('');\n  const [isValid, setIsValid] = useState(true);\n  const [isUntilValid, setIsValidUntil] = useState(true);\n  const [isInput, setIsInput] = useState(true);\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [address, setAddress] = useState('');\n  // const [days, setDays] = useState('1');\n  // const [payment, setPayment] = useState('');\n  const [quantity, setQuantity] = useState('1');\n  const [allBookingDetails, setAllBookingDetails] = useState([]);\n  const [totalBookingQty, setTotalBookingQty] = useState('');\n  // const [totalVehicleQty, setTotalVehicleQty] = useState('')\n  const [maxQty, setMaxQty] = useState(\"\");\n  const [message, showMessage] = useState(\"\");\n  const [stock, setStock] = useState('');\n  const [rent, setRent] = useState('');\n  // const [TotalRent, setTotalRent] = useState('');\n  useEffect(() => {\n    if (!auth) {\n      navigate('/login');\n      // alert(\"You are not Login !\");\n    }\n\n    const getVehicleDetails = async () => {\n      // console.log(params);\n      const result = await fetch(`http://localhost:5000/api/product/${params.id}`, {\n        method: 'get',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const resultData = await result.json();\n      // console.log(resultData);\n      setStock(resultData.countInStock);\n      setRent(resultData.price);\n      localStorage.setItem(\"vehicleDetails\", JSON.stringify(resultData));\n    };\n    getVehicleDetails();\n    const getBookingsDetails = async () => {\n      const result = await fetch(`http://localhost:5000/api/booking/bookings/${params.id}`, {\n        method: 'get',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${JSON.parse(auth).token}`\n        }\n      });\n      const resultData = await result.json();\n      setAllBookingDetails(resultData);\n      // console.warn(resultData);\n    };\n\n    if (params.id) {\n      getBookingsDetails();\n    }\n  }, [navigate, params.id, auth]);\n  const handleFromDate = event => {\n    const inputDate = event.target.value;\n    const currentDate = new Date();\n    const selectedDate = new Date(inputDate);\n    if (selectedDate < currentDate) {\n      setIsValid(false);\n    } else {\n      setIsValid(true);\n      setFromDate(inputDate);\n    }\n  };\n  const handleUntilDate = event => {\n    const inputDate = event.target.value;\n    const selectedDate = new Date(inputDate);\n    const isFromDate = fromDate;\n    if (isFromDate) {\n      if (selectedDate < isFromDate) {\n        setIsValidUntil(false);\n      } else {\n        setIsValidUntil(true);\n        setUntilDate(inputDate);\n      }\n    } else {\n      setIsInput(false);\n    }\n  };\n\n  // this used for calculate total booking quantity\n  useEffect(() => {\n    const calculateTotalQuantity = () => {\n      let totalQty = 0;\n      let rentDate1start = new Date(date);\n      let rentDate1end = '';\n      let rentDate2start = '';\n      let rentDate2end = '';\n      let rentDays1 = parseInt(days); // Ensure it's a number\n\n      let qty1 = 0;\n      let qty2 = 0;\n      let qty3 = 0;\n      let qty4 = 0;\n      let rentDays2 = '';\n      if (rentDays1 > 1) {\n        // Make sure it's not a string comparison\n        rentDate1start.setDate(rentDate1start.getDate() + rentDays1);\n        rentDate1end = new Date(rentDate1start); // Create a new Date object for end date\n      }\n\n      for (let i = 0; i < allBookingDetails.length; i++) {\n        rentDays2 = parseInt(allBookingDetails[i].rentDays); // Ensure it's a number\n        rentDate2start = new Date(allBookingDetails[i].rentDate);\n        if (rentDays1 === 1 || rentDays2 === 1) {\n          if (rentDate1start.getTime() === rentDate2start.getTime()) {\n            // Compare using getTime() method\n            qty1 += allBookingDetails[i].bookingItems[0].qty;\n          }\n        } else if (rentDays1 === 1 || rentDays2 > 1) {\n          rentDate2end = new Date(rentDate2start); // Create a new Date object for end date\n          rentDate2end.setDate(rentDate2start.getDate() + rentDays2);\n          if ((rentDate1start <= rentDate2start || rentDate1start >= rentDate2end) && (rentDate1start >= rentDate2start || rentDate1start >= rentDate2end) && (rentDate1start <= rentDate2start || rentDate1start <= rentDate2end) && (rentDate1start >= rentDate2start || rentDate1start <= rentDate2end)) {\n            qty2 += allBookingDetails[i].bookingItems[0].qty;\n          }\n        } else if (rentDays1 > 1 || rentDays2 === 1) {\n          if ((rentDate1start <= rentDate2start || rentDate1end >= rentDate2start) && (rentDate1start >= rentDate2start || rentDate1end >= rentDate2start) && (rentDate1start <= rentDate2start || rentDate1end <= rentDate2start) && (rentDate1start >= rentDate2start || rentDate1end <= rentDate2start)) {\n            qty3 += allBookingDetails[i].bookingItems[0].qty;\n          }\n        } else {\n          rentDate2end = new Date(rentDate2start); // Create a new Date object for end date\n          rentDate2end.setDate(rentDate2start.getDate() + rentDays2);\n          if ((rentDate1start <= rentDate2start || rentDate1end >= rentDate2end) && (rentDate1start >= rentDate2start || rentDate1end >= rentDate2end) && (rentDate1start <= rentDate2start || rentDate1end <= rentDate2end) && (rentDate1start >= rentDate2start || rentDate1end <= rentDate2end)) {\n            qty4 += allBookingDetails[i].bookingItems[0].qty;\n          }\n        }\n        totalQty = qty1 + qty2 + qty3 + qty4;\n      }\n      setTotalBookingQty(totalQty);\n      setMaxQty(stock - totalQty);\n      // setMaxQty(totalVehicleQty-totalQty);\n    };\n\n    calculateTotalQuantity();\n  }, [allBookingDetails, date, stock, days]);\n  console.log(totalBookingQty, maxQty);\n  const handleFormReset = () => {\n    setName(\"\");\n    setPhone(\"\");\n    setDays(\"1\");\n    setDate(\"\");\n    // setPayment(\"\");\n    setQuantity(\"\");\n  };\n  const handleGoBack = () => {\n    navigate(`/view/${params.id}`);\n  };\n  const bookHandle = async e => {\n    // console.log(name, date, phone, days, payment, quantity, rent, address);\n    // const address = [\n    //     \"name\": name,\n    //     \"date\": date,\n    //     \"phone\": phone,\n    //     \"days\": days\n    // ];\n    try {\n      if (!(name === '' || date === '' || phone === '' || days === '' || quantity === '' || address === '')) {\n        // const getVehicleDetails = async () => {\n        //     // console.log(params);\n        //     const result = await fetch(`http://localhost:5000/api/product/${params.id}`, {\n        //         method: 'get',\n        //         headers: {\n        //             'Content-Type': 'application/json'\n        //         }\n        //     });\n        //     const resultData = await result.json();\n        //     console.log(resultData);\n        //     localStorage.setItem(\"bookingData\", JSON.stringify(resultData));\n\n        // }\n        // getVehicleDetails();\n        const payment = 'cash';\n        if (quantity <= maxQty) {\n          const TotalRent = days * rent * quantity;\n          localStorage.setItem(\"bookingData\", JSON.stringify({\n            \"name\": name,\n            \"date\": date,\n            \"phone\": phone,\n            \"address\": address,\n            \"days\": days,\n            \"payment\": payment,\n            \"v_quantity\": quantity,\n            \"totalRent\": TotalRent\n          }));\n          navigate(`/billing`);\n\n          // if (payment === 'khalti') {\n          //     localStorage.setItem(\"bookingData\", JSON.stringify({ \"name\": name, \"date\": date, \"phone\": phone, \"address\": address, \"days\": days, \"payment\": payment, \"v_quantity\": quantity, \"totalRent\": TotalRent }));\n          //     navigate('/khalti');\n          // }\n        } else {\n          showMessage(\"Vehicle Quantity is Not Available \");\n        }\n      } else {\n        showMessage(\"Fill all Form Input ! \");\n      }\n    } catch (Error) {}\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"inline-grid mt-28 rounded-3xl justify-center bg-stone-200 mb-16\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoBack,\n      className: \"rounded text-white text-left w-20 px-2 ml-10 mt-4 bg-red-400 hover:bg-red-600 hover:font-semibold\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center font-bold text-2xl text-stone-600\",\n        children: \"Book Vehicle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: message !== '' && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4 text-slate-200 bg-red-400 rounded\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \" font-semibold\",\n            children: \"Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 97\n          }, this), \" : \", message, \" !\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"text-left font-medium text-stone-500 mt-2 ml-3\",\n        children: \"*Name* :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"w-72 outline outline-offset-2 outline-2 text-center rounded-md mt-2 ml-20 mr-3\",\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        placeholder: \"Enter your name..\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"text-left font-medium text-stone-500 ml-3 mt-2\",\n        children: \"*Phone Number* :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"w-72 outline outline-offset-2 outline-2 text-center rounded-md mt-2 ml-3 mr-3\",\n        type: \"text\",\n        value: phone,\n        onChange: e => setPhone(e.target.value),\n        placeholder: \"Enter contact number..\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"text-left font-medium text-stone-500 mt-2 ml-3\",\n        children: \"*Address* :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"w-72 outline outline-offset-2 outline-2 text-center rounded-md mt-2 ml-16 mr-3\",\n        type: \"text\",\n        value: address,\n        onChange: e => setAddress(e.target.value),\n        placeholder: \"Enter your address..\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"text-left font-medium text-stone-500 mt-2 ml-3\",\n        children: \"*From * :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: `w-72 outline outline-offset-2 outline-2 text-center rounded-md mt-2 ml-11 mr-3 ${isValid ? '' : 'border-red-500'}`,\n          type: \"date\",\n          placeholder: \"Enter from date..\",\n          required: true,\n          value: fromDate,\n          onChange: handleFromDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: !isValid && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-3 text-red-500\",\n              children: \"Error: Selected date must be in the future.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 23\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"text-left font-medium text-stone-500 mt-2 ml-3\",\n        children: \"*Until* :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: `w-72 outline outline-offset-2 outline-2 text-center rounded-md mt-2 ml-11 mr-3 ${isUntilValid && isInput ? '' : 'border-red-500'}`,\n          type: \"date\",\n          placeholder: \"Enter until date..\",\n          required: true,\n          value: untilDate,\n          onChange: handleUntilDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: !isUntilValid && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-3 text-red-500\",\n              children: \"Error: Selected date must be in the future.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 23\n          }, this)\n        }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: !isInput && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-3 text-red-500\",\n              children: \"Info: Selected date after From Date.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 23\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"text-left font-medium text-stone-500 mt-2 ml-2\",\n        children: \"*Quantity* :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"w-72 outline outline-offset-2 outline-2 text-center rounded-md mt-2 ml-16 mr-3\",\n        value: quantity,\n        onChange: e => setQuantity(e.target.value),\n        required: true,\n        children: [...Array(maxQty).keys()].map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item + 1,\n          children: item + 1\n        }, item + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex text-white mb-3 mt-4 justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        onClick: bookHandle,\n        className: \"w-36 ml-3 rounded-xl h-12 text-center font-semibold mt-5 mb-3 bg-green-600 hover:bg-green-800 hover:text-lg hover:font-bold hover:rounded-full\",\n        value: \"Book Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFormReset,\n        className: \"w-24 mr-3 rounded-xl h-12 text-center font-semibold mt-5 mb-3 bg-red-600 hover:bg-red-800 hover:text-lg hover:font-bold hover:rounded-full\",\n        children: \"Clear \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 9\n  }, this);\n};\n_s(Book, \"sYVg0ZjRIwWzOk0n0rLCf/4n7yU=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Book;\nexport default Book;\nvar _c;\n$RefreshReg$(_c, \"Book\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","Book","_s","auth","localStorage","getItem","navigate","params","fromDate","setFromDate","untilDate","setUntilDate","isValid","setIsValid","isUntilValid","setIsValidUntil","isInput","setIsInput","name","setName","phone","setPhone","address","setAddress","quantity","setQuantity","allBookingDetails","setAllBookingDetails","totalBookingQty","setTotalBookingQty","maxQty","setMaxQty","message","showMessage","stock","setStock","rent","setRent","getVehicleDetails","result","fetch","id","method","headers","resultData","json","countInStock","price","setItem","JSON","stringify","getBookingsDetails","Authorization","parse","token","handleFromDate","event","inputDate","target","value","currentDate","Date","selectedDate","handleUntilDate","isFromDate","calculateTotalQuantity","totalQty","rentDate1start","date","rentDate1end","rentDate2start","rentDate2end","rentDays1","parseInt","days","qty1","qty2","qty3","qty4","rentDays2","setDate","getDate","i","length","rentDays","rentDate","getTime","bookingItems","qty","console","log","handleFormReset","setDays","handleGoBack","bookHandle","e","payment","TotalRent","Error","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","required","Array","keys","map","item","_c","$RefreshReg$"],"sources":["/home/ishwore/Documents/VehicleRent/front-end/src/screen/Book.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\n\nconst Book = () => {\n    const auth = localStorage.getItem('user');\n    const navigate = useNavigate();\n    const params = useParams();\n    const [fromDate, setFromDate] = useState('');\n    const [untilDate, setUntilDate] = useState('');\n    const [isValid, setIsValid] = useState(true);\n    const [isUntilValid, setIsValidUntil] = useState(true);\n    const [isInput, setIsInput] = useState(true);\n    const [name, setName] = useState('');\n    const [phone, setPhone] = useState('');\n    const [address, setAddress] = useState('');\n    // const [days, setDays] = useState('1');\n    // const [payment, setPayment] = useState('');\n    const [quantity, setQuantity] = useState('1');\n    const [allBookingDetails, setAllBookingDetails] = useState([])\n    const [totalBookingQty, setTotalBookingQty] = useState('')\n    // const [totalVehicleQty, setTotalVehicleQty] = useState('')\n    const [maxQty, setMaxQty] = useState(\"\");\n    const [message, showMessage] = useState(\"\");\n    const [stock, setStock] = useState('');\n    const [rent, setRent] = useState('');\n    // const [TotalRent, setTotalRent] = useState('');\n    useEffect(() => {\n        if (!auth) {\n            navigate('/login');\n            // alert(\"You are not Login !\");\n        }\n\n        const getVehicleDetails = async () => {\n            // console.log(params);\n            const result = await fetch(`http://localhost:5000/api/product/${params.id}`, {\n                method: 'get',\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n            const resultData = await result.json();\n            // console.log(resultData);\n            setStock(resultData.countInStock);\n            setRent(resultData.price);\n            localStorage.setItem(\"vehicleDetails\", JSON.stringify(resultData));\n\n\n        }\n        getVehicleDetails();\n        const getBookingsDetails = async () => {\n\n            const result = await fetch(`http://localhost:5000/api/booking/bookings/${params.id}`, {\n                method: 'get',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${JSON.parse(auth).token}`,\n                }\n            });\n            const resultData = await result.json();\n            setAllBookingDetails(resultData)\n            // console.warn(resultData);\n        }\n        if (params.id) {\n            getBookingsDetails();\n        }\n\n    }, [navigate, params.id, auth])\n\n\n\n    const handleFromDate = (event) => {\n        const inputDate = event.target.value;\n        const currentDate = new Date();\n        const selectedDate = new Date(inputDate);\n\n        if (selectedDate < currentDate) {\n            setIsValid(false);\n        } else {\n            setIsValid(true);\n            setFromDate(inputDate);\n        }\n    };\n\n    const handleUntilDate = (event) => {\n        const inputDate = event.target.value;\n        const selectedDate = new Date(inputDate);\n        const isFromDate = fromDate;\n        if (isFromDate) {\n            if (selectedDate < isFromDate) {\n                setIsValidUntil(false);\n            } else {\n                setIsValidUntil(true);\n                setUntilDate(inputDate);\n            }\n        } else {\n            setIsInput(false);\n        }\n\n\n    };\n\n\n    // this used for calculate total booking quantity\n    useEffect(() => {\n\n        const calculateTotalQuantity = () => {\n            let totalQty = 0;\n            let rentDate1start = new Date(date);\n            let rentDate1end = '';\n            let rentDate2start = '';\n            let rentDate2end = '';\n            let rentDays1 = parseInt(days); // Ensure it's a number\n\n            let qty1 = 0;\n            let qty2 = 0;\n            let qty3 = 0;\n            let qty4 = 0;\n            let rentDays2 = '';\n\n            if (rentDays1 > 1) { // Make sure it's not a string comparison\n                rentDate1start.setDate(rentDate1start.getDate() + rentDays1);\n                rentDate1end = new Date(rentDate1start); // Create a new Date object for end date\n            }\n\n            for (let i = 0; i < allBookingDetails.length; i++) {\n                rentDays2 = parseInt(allBookingDetails[i].rentDays); // Ensure it's a number\n                rentDate2start = new Date(allBookingDetails[i].rentDate);\n\n                if (rentDays1 === 1 || rentDays2 === 1) {\n                    if (rentDate1start.getTime() === rentDate2start.getTime()) { // Compare using getTime() method\n                        qty1 += allBookingDetails[i].bookingItems[0].qty;\n                    }\n                } else if (rentDays1 === 1 || rentDays2 > 1) {\n                    rentDate2end = new Date(rentDate2start); // Create a new Date object for end date\n                    rentDate2end.setDate(rentDate2start.getDate() + rentDays2);\n                    if ((rentDate1start <= rentDate2start || rentDate1start >= rentDate2end) && (rentDate1start >= rentDate2start || rentDate1start >= rentDate2end) && (rentDate1start <= rentDate2start || rentDate1start <= rentDate2end) && (rentDate1start >= rentDate2start || rentDate1start <= rentDate2end)) {\n                        qty2 += allBookingDetails[i].bookingItems[0].qty;\n                    }\n\n                }\n                else if (rentDays1 > 1 || rentDays2 === 1) {\n\n                    if ((rentDate1start <= rentDate2start || rentDate1end >= rentDate2start) && (rentDate1start >= rentDate2start || rentDate1end >= rentDate2start) && (rentDate1start <= rentDate2start || rentDate1end <= rentDate2start) && (rentDate1start >= rentDate2start || rentDate1end <= rentDate2start)) {\n                        qty3 += allBookingDetails[i].bookingItems[0].qty;\n                    }\n\n                }\n                else {\n                    rentDate2end = new Date(rentDate2start); // Create a new Date object for end date\n                    rentDate2end.setDate(rentDate2start.getDate() + rentDays2);\n\n                    if ((rentDate1start <= rentDate2start || rentDate1end >= rentDate2end) && (rentDate1start >= rentDate2start || rentDate1end >= rentDate2end) && (rentDate1start <= rentDate2start || rentDate1end <= rentDate2end) && (rentDate1start >= rentDate2start || rentDate1end <= rentDate2end)) {\n                        qty4 += allBookingDetails[i].bookingItems[0].qty;\n                    }\n                }\n\n                totalQty = qty1 + qty2 + qty3 + qty4;\n            }\n            setTotalBookingQty(totalQty);\n            setMaxQty(stock - totalQty)\n            // setMaxQty(totalVehicleQty-totalQty);\n        };\n\n        calculateTotalQuantity();\n\n    }, [allBookingDetails, date, stock, days]);\n\n    console.log(totalBookingQty, maxQty);\n\n    const handleFormReset = () => {\n        setName(\"\");\n        setPhone(\"\");\n        setDays(\"1\");\n        setDate(\"\");\n        // setPayment(\"\");\n        setQuantity(\"\");\n    };\n    const handleGoBack = () => {\n        navigate(`/view/${params.id}`);\n    };\n    const bookHandle = async (e) => {\n        // console.log(name, date, phone, days, payment, quantity, rent, address);\n        // const address = [\n        //     \"name\": name,\n        //     \"date\": date,\n        //     \"phone\": phone,\n        //     \"days\": days\n        // ];\n        try {\n            if (!(name === '' || date === '' || phone === '' || days === '' || quantity === '' || address === '')) {\n\n                // const getVehicleDetails = async () => {\n                //     // console.log(params);\n                //     const result = await fetch(`http://localhost:5000/api/product/${params.id}`, {\n                //         method: 'get',\n                //         headers: {\n                //             'Content-Type': 'application/json'\n                //         }\n                //     });\n                //     const resultData = await result.json();\n                //     console.log(resultData);\n                //     localStorage.setItem(\"bookingData\", JSON.stringify(resultData));\n\n\n                // }\n                // getVehicleDetails();\n                const payment = 'cash';\n\n                if (quantity <= maxQty) {\n                    const TotalRent = days * rent * quantity;\n                    localStorage.setItem(\"bookingData\", JSON.stringify({ \"name\": name, \"date\": date, \"phone\": phone, \"address\": address, \"days\": days, \"payment\": payment, \"v_quantity\": quantity, \"totalRent\": TotalRent }));\n\n                    navigate(`/billing`);\n\n\n                    // if (payment === 'khalti') {\n                    //     localStorage.setItem(\"bookingData\", JSON.stringify({ \"name\": name, \"date\": date, \"phone\": phone, \"address\": address, \"days\": days, \"payment\": payment, \"v_quantity\": quantity, \"totalRent\": TotalRent }));\n                    //     navigate('/khalti');\n                    // }\n\n\n                } else {\n                    showMessage(\"Vehicle Quantity is Not Available \")\n                }\n\n\n            } else {\n\n                showMessage(\"Fill all Form Input ! \")\n            }\n\n        } catch (Error) {\n\n        }\n\n\n    }\n\n    return (\n        <form className=\"inline-grid mt-28 rounded-3xl justify-center bg-stone-200 mb-16\">\n            <button onClick={handleGoBack} className=\"rounded text-white text-left w-20 px-2 ml-10 mt-4 bg-red-400 hover:bg-red-600 hover:font-semibold\">Go Back</button>\n            <div className=\"mt-2\">\n                <h1 className='text-center font-bold text-2xl text-stone-600'>Book Vehicle</h1>\n                <span>{message !== '' && <p className=\"mt-4 text-slate-200 bg-red-400 rounded\"> <span className=\" font-semibold\">Message</span> : {message} !</p>}</span>\n            </div>\n            <div className=\"flex mt-2\">\n                <label className=\"text-left font-medium text-stone-500 mt-2 ml-3\">*Name* :</label>\n                <input className=\"w-72 outline outline-offset-2 outline-2 text-center rounded-md mt-2 ml-20 mr-3\" type=\"text\" value={name} onChange={(e) => setName(e.target.value)} placeholder=\"Enter your name..\" required />\n            </div>\n            <div className=\"flex mt-2\">\n                <label className=\"text-left font-medium text-stone-500 ml-3 mt-2\">*Phone Number* :</label>\n                <input className=\"w-72 outline outline-offset-2 outline-2 text-center rounded-md mt-2 ml-3 mr-3\" type=\"text\" value={phone} onChange={(e) => setPhone(e.target.value)} placeholder=\"Enter contact number..\" required />\n            </div>\n            <div className=\"flex mt-2\">\n                <label className=\"text-left font-medium text-stone-500 mt-2 ml-3\">*Address* :</label>\n                <input className=\"w-72 outline outline-offset-2 outline-2 text-center rounded-md mt-2 ml-16 mr-3\" type=\"text\" value={address} onChange={(e) => setAddress(e.target.value)} placeholder=\"Enter your address..\" required />\n            </div>\n            <div className=\"flex mt-2\">\n                <label className=\"text-left font-medium text-stone-500 mt-2 ml-3\">*From * :</label>\n                <div className=\"flex-auto\">\n                    <input className={`w-72 outline outline-offset-2 outline-2 text-center rounded-md mt-2 ml-11 mr-3 ${isValid ? '' : 'border-red-500'}`}\n                        type=\"date\"\n                        placeholder=\"Enter from date..\"\n                        required\n                        value={fromDate}\n                        onChange={handleFromDate}\n                    />\n                    <><span>{!isValid && <p className=\"mt-3 text-red-500\">Error: Selected date must be in the future.</p>}</span></></div>\n\n            </div>\n            {/* <div className=\"flex mt-2\">\n                <label className=\"text-left font-medium text-stone-500 ml-2 mt-2\">*Day(s)*:</label>\n                <input className=\"w-72 outline outline-offset-2 outline-2 text-center rounded-md mt-2 ml-20 mr-3\" type=\"number\" value={days} onChange={(e) => setDays(e.target.value)} placeholder=\"Enter need days..\" min=\"1\" required />\n            </div> */}\n            <div className=\"flex mt-2\">\n                <label className=\"text-left font-medium text-stone-500 mt-2 ml-3\">*Until* :</label>\n                <div className=\"flex-auto\">\n                    <input className={`w-72 outline outline-offset-2 outline-2 text-center rounded-md mt-2 ml-11 mr-3 ${isUntilValid && isInput ? '' : 'border-red-500'}`}\n                        type=\"date\"\n                        placeholder=\"Enter until date..\"\n                        required\n                        value={untilDate}\n                        onChange={handleUntilDate}\n                    />\n                    <><span>{!isUntilValid && <p className=\"mt-3 text-red-500\">Error: Selected date must be in the future.</p>}</span></>\n                    <><span>{!isInput && <p className=\"mt-3 text-red-500\">Info: Selected date after From Date.</p>}</span></></div>\n            </div>\n            {/* <div className=\"flex mt-2\"> */}\n            {/* <label className=\"text-left font-medium text-stone-500 mt-2 ml-2\">*Payment* :</label>\n                <select className=\"w-72 outline outline-offset-2 outline-2 text-center rounded-md mt-2 ml-16 mr-3\" value={payment} onChange={(e) => setPayment(e.target.value)} required >\n                    <option value=\"\">Select Payment Method</option>\n                    <option value=\"cash\">Cash</option>\n                    <option value=\"khalti\">khalti</option>\n                </select> */}\n\n            {/* <p>Selected Option: {payment}</p> */}\n            {/* </div> */}\n            <div className=\"flex mt-2\">\n                <label className=\"text-left font-medium text-stone-500 mt-2 ml-2\">*Quantity* :</label>\n                <select\n                    className=\"w-72 outline outline-offset-2 outline-2 text-center rounded-md mt-2 ml-16 mr-3\"\n                    value={quantity}\n                    onChange={(e) => setQuantity(e.target.value)}\n                    required\n                >\n                    {[...Array(maxQty).keys()].map((item) => (\n                        <option key={item + 1} value={item + 1}>\n                            {item + 1}\n                        </option>\n                    ))}\n                </select>\n            </div>\n            <div className=\"flex text-white mb-3 mt-4 justify-between\">\n                <input type=\"submit\" onClick={bookHandle} className='w-36 ml-3 rounded-xl h-12 text-center font-semibold mt-5 mb-3 bg-green-600 hover:bg-green-800 hover:text-lg hover:font-bold hover:rounded-full' value=\"Book Now\" />\n                {/* <Link to=\"/home\" className='w-24 mr-3 rounded-xl h-12 text-center font-semibold mt-5 pt-2.5 mb-3 bg-red-600 hover:bg-red-800 hover:text-lg hover:font-bold hover:rounded-full'>Cancel</Link> */}\n                <button onClick={handleFormReset} className='w-24 mr-3 rounded-xl h-12 text-center font-semibold mt-5 mb-3 bg-red-600 hover:bg-red-800 hover:text-lg hover:font-bold hover:rounded-full' >Clear </button>\n            </div>\n        </form >\n    )\n}\n\n\nexport default Book;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}